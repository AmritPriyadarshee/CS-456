#!/usr/bin/python
import struct
import sys
import socket

global command
global key
global filename
global wait_time

'''Create socket'''
sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) #TCP

ip = sys.argv[1]
port = sys.argv[2]
command = sys.argv[3][0]
key = '\0'
filename = ""


##Req'd to meet specs
if ((len(sys.argv[3])) > 1):
	key = sys.argv[3][1:]

if ((len(sys.argv)) > 4):
	filename = sys.argv[4]
	size = int(sys.argv[5])
	wait_time = -1


'''Padding of key'''
while (len(key) < 8):
	key = key + '\0'

'''If wait_time exists, make it an int'''
if (len(sys.argv) > 6):
	wait_time = int(sys.argv[6])

'''Update port variable'''
f = open('port', 'r')
port = int(f.read())
f.close()

'''Update command with read/write'''
if (command == 'P'):
	command = 'rb'

if (command == 'G'):
	command = 'w'

'''Virtual Filename fix'''
if (filename.isdigit()):
	f = open(str(filename), 'w')
	filename1 = int(filename)
	i = 0
	while (i  < filename1):
		# print (i, filename1)
		f.write("x")
		i = i+1
	f.close()
	filename = str(filename)



def connect():
	sock.connect((ip, port))

	'''Terminate Clause'''
	if (command == 'F'):
		header = struct.pack('!9sIi', "F", 0, -1)
		
		'''Close after we send our terminate command to server'''
		sock.send(header)
		sock.close()
		return

	'''If we're not terminating, open up a file to read or write from depending on command'''
	file = open(filename, command)


	if (command == 'rb'): #Upload
		header = struct.pack('!9sIi', "P" + key, size, wait_time)
		sock.send(header)
		data = file.read(size)
		sock.send(data)
		while (data != ""): #Data exists
			data = file.read(size)
			sock.send(data)
		sock.close()
		file.close()

	elif (command == 'w'): #Download
		header = struct.pack('!9sIi', "G" + key, size, wait_time)
		sock.send(header)
		while True:
			data = sock.recvfrom(size)
			if (data[0] == ""): #No data
				break

			else:
				file.write(data[0])

		'''Shutdown procedures after we're done writing'''
		f.close()
		sock.close()
		return

connect()
